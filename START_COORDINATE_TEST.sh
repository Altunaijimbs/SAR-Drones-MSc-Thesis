#!/bin/bash
# Coordinate System Testing - Terminal Setup Guide
# Date: August 3, 2025

echo "==================================="
echo "COORDINATE SYSTEM GROUND TRUTH TEST"
echo "==================================="
echo ""
echo "This script will guide you through setting up terminals for coordinate testing."
echo "Open 5 terminals and follow the instructions below."
echo ""
echo "Press Enter to see the commands for each terminal..."
read

clear
echo "==================================="
echo "TERMINAL 1: PX4 SITL"
echo "==================================="
echo "Run these commands:"
echo ""
echo "cd ~/PX4-Autopilot"
echo "make px4_sitl none_iris"
echo ""
echo "Wait for: 'pxh> simulator connected' message"
echo ""
echo "Press Enter when Terminal 1 is ready..."
read

clear
echo "==================================="
echo "TERMINAL 2: UNREAL ENGINE"
echo "==================================="
echo "1. Open Unreal Engine 5"
echo "2. Load your SAR project"
echo "3. Press PLAY button"
echo "4. Minimize UE5 window"
echo ""
echo "Press Enter when UE5 is playing..."
read

clear
echo "==================================="
echo "TERMINAL 3: TEST SYSTEM LAUNCH"
echo "==================================="
echo "Run these commands:"
echo ""
echo "cd /home/mbs/SAR-Drones-MSc-Thesis"
echo "./test_fixed_system.sh"
echo ""
echo "Wait for: '=== SYSTEM READY ===' message"
echo ""
echo "Press Enter when system is ready..."
read

clear
echo "==================================="
echo "TERMINAL 4: COORDINATE MONITOR"
echo "==================================="
echo "Run these commands:"
echo ""
echo "cd /home/mbs/SAR-Drones-MSc-Thesis/ros2_ws"
echo "source install/setup.bash"
echo "python3 /home/mbs/SAR-Drones-MSc-Thesis/diagnose_coordinates.py"
echo ""
echo "This will monitor all velocity commands and positions"
echo ""
echo "Press Enter when monitor is running..."
read

clear
echo "==================================="
echo "TERMINAL 5: TEST COMMANDS (Main Terminal)"
echo "==================================="
echo "Run these commands to set up:"
echo ""
echo "cd /home/mbs/SAR-Drones-MSc-Thesis/ros2_ws"
echo "source install/setup.bash"
echo ""
echo "Then arm and takeoff:"
echo "ros2 service call /mavros/set_mode mavros_msgs/srv/SetMode \"{custom_mode: 'OFFBOARD'}\""
echo "ros2 service call /mavros/cmd/arming mavros_msgs/srv/CommandBool \"{value: true}\""
echo "ros2 topic pub /simple_command std_msgs/msg/String \"data: 'up'\" --once"
echo ""
echo "Wait 5 seconds for stable hover at ~3m altitude"
echo ""
echo "Press Enter when drone is hovering..."
read

clear
echo "==================================="
echo "READY TO START TESTING!"
echo "==================================="
echo ""
echo "The drone should now be hovering at ~3m altitude."
echo "Terminal 4 should be showing coordinate diagnostics."
echo ""
echo "Press Enter to see the test commands..."
read

clear
echo "==================================="
echo "STEP 1: RAW MAVROS VELOCITY TESTS"
echo "==================================="
echo "In Terminal 5, run these commands one at a time:"
echo "Watch Terminal 4 for velocity values and observe drone movement"
echo ""
echo "Test 1 - X-axis (Forward/Back in ROS):"
echo "ros2 topic pub /mavros/setpoint_velocity/cmd_vel_unstamped geometry_msgs/msg/Twist \"{linear: {x: 1.0, y: 0.0, z: 0.0}}\" -r 10 -t 2"
echo ""
echo "After 2 seconds, stop with:"
echo "ros2 topic pub /simple_command std_msgs/msg/String \"data: 'stop'\" --once"
echo ""
echo "RECORD: Drone moved which direction? _____________"
echo ""
echo "Press Enter for next test..."
read

echo "Test 2 - Y-axis (Left/Right in ROS):"
echo "ros2 topic pub /mavros/setpoint_velocity/cmd_vel_unstamped geometry_msgs/msg/Twist \"{linear: {x: 0.0, y: 1.0, z: 0.0}}\" -r 10 -t 2"
echo ""
echo "After 2 seconds, stop with:"
echo "ros2 topic pub /simple_command std_msgs/msg/String \"data: 'stop'\" --once"
echo ""
echo "RECORD: Drone moved which direction? _____________"
echo ""
echo "Press Enter for next test..."
read

echo "Test 3 - Z-axis (Up/Down):"
echo "ros2 topic pub /mavros/setpoint_velocity/cmd_vel_unstamped geometry_msgs/msg/Twist \"{linear: {x: 0.0, y: 0.0, z: 1.0}}\" -r 10 -t 2"
echo ""
echo "After 2 seconds, stop with:"
echo "ros2 topic pub /simple_command std_msgs/msg/String \"data: 'stop'\" --once"
echo ""
echo "RECORD: Drone moved which direction? _____________"
echo ""
echo "Press Enter to continue to smart keep-alive tests..."
read

clear
echo "==================================="
echo "STEP 2: SMART KEEP-ALIVE TESTS"
echo "==================================="
echo "Now test the smart keep-alive commands:"
echo "Watch Terminal 4 for what velocity is sent to MAVROS"
echo ""
echo "Test 1 - Forward:"
echo "ros2 topic pub /simple_command std_msgs/msg/String \"data: 'forward'\" --once"
echo "Observe: Direction moved? _______ MAVROS velocity sent? _______"
echo ""
echo "Test 2 - Right:"
echo "ros2 topic pub /simple_command std_msgs/msg/String \"data: 'right'\" --once"
echo "Observe: Direction moved? _______ MAVROS velocity sent? _______"
echo ""
echo "Test 3 - Back:"
echo "ros2 topic pub /simple_command std_msgs/msg/String \"data: 'backward'\" --once"
echo "Observe: Direction moved? _______ MAVROS velocity sent? _______"
echo ""
echo "Test 4 - Left:"
echo "ros2 topic pub /simple_command std_msgs/msg/String \"data: 'left'\" --once"
echo "Observe: Direction moved? _______ MAVROS velocity sent? _______"
echo ""
echo "Press Enter to see next steps..."
read

clear
echo "==================================="
echo "STEP 3: CREATE TEST RESULTS FILE"
echo "==================================="
echo "Create a new file to record your results:"
echo ""
echo "cd /home/mbs/SAR-Drones-MSc-Thesis/Updates"
echo "nano COORDINATE_TEST_RESULTS.md"
echo ""
echo "Record all your observations in this format:"
echo ""
echo "# Coordinate Test Results - August 3, 2025"
echo ""
echo "## Raw MAVROS Tests"
echo "- MAVROS X=1.0 → Drone moved: [direction]"
echo "- MAVROS Y=1.0 → Drone moved: [direction]"
echo "- MAVROS Z=1.0 → Drone moved: [direction]"
echo ""
echo "## Smart Keep-Alive Tests"
echo "- 'forward' command → Drone moved: [direction], MAVROS got: X=[val] Y=[val]"
echo "- 'right' command → Drone moved: [direction], MAVROS got: X=[val] Y=[val]"
echo "- 'backward' command → Drone moved: [direction], MAVROS got: X=[val] Y=[val]"
echo "- 'left' command → Drone moved: [direction], MAVROS got: X=[val] Y=[val]"
echo ""
echo "## Conclusions"
echo "[What transformation is needed?]"
echo ""
echo "==================================="
echo "Press Enter to see coordinate test node creation..."
read

clear
echo "==================================="
echo "STEP 4: CREATE COORDINATE TEST NODE"
echo "==================================="
echo "Create the test node file:"
echo ""
echo "cd /home/mbs/SAR-Drones-MSc-Thesis"
echo "nano coordinate_test.py"
echo ""
echo "Copy the coordinate test node code from IMMEDIATE_ACTION_PLAN.md"
echo "Make it executable:"
echo "chmod +x coordinate_test.py"
echo ""
echo "Run it in Terminal 5:"
echo "python3 coordinate_test.py"
echo ""
echo "Then in a new Terminal 6:"
echo "cd /home/mbs/SAR-Drones-MSc-Thesis/ros2_ws"
echo "source install/setup.bash"
echo ""
echo "Test each transformation:"
echo "ros2 topic pub /test_command std_msgs/msg/String \"data: 'no_transform'\" --once"
echo "ros2 topic pub /test_command std_msgs/msg/String \"data: 'transform_current'\" --once"
echo "ros2 topic pub /test_command std_msgs/msg/String \"data: 'transform_negated'\" --once"
echo ""
echo "==================================="
echo "END OF GUIDED TEST"
echo "==================================="
echo ""
echo "Based on your results, you'll know which transformation is correct!"
echo "Update the code accordingly and test RTH."